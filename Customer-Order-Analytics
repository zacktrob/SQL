#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 

-- How many orders were placed in January?
SELECT DISTINCT
    COUNT(orderID)
FROM
    bit_db.jansales;

-- HOw many of those order were for an iPhone?
SELECT 
    COUNT(*)
FROM
    bit_db.JanSales
WHERE
    product = 'iPhone';

-- Select the customer account numbers for all the orders that were placed in Feb
SELECT 
    bit_db.customers.acctnum
FROM
    bit_db.customers
        JOIN
    bit_db.FebSales ON bit_db.customers.order_id = bit_db.febsales.orderID;


-- Which product was the cheapest one sold in Jan, price?
SELECT 
    bit_db.jansales.price, product
FROM
    bit_db.jansales
GROUP BY product
ORDER BY price
LIMIT 1;

-- What is total revenue for each product sold in Jan? 
SELECT 
    product, ROUND(SUM(price) * quantity, 2) AS revenue
FROM
    bit_db.JanSales
GROUP BY product
ORDER BY price;


-- Which products were sold in Feb at 548 Lincoln St, Seattle, WA 98101? How many of each were sold, total revenue?
SELECT 
    product,
    quantity,
    ROUND(SUM(price) * quantity, 2) AS revenue
FROM
    bit_db.febsales
WHERE
    location = '548 Lincoln St, Seattle, WA 98101';


-- How many customers ordered more than 2 products at a time in Feb, avg amount spent?
SELECT 
    COUNT(customers.acctnum), AVG(quantity * price)
FROM
    customers
        JOIN
    febsales ON customers.order_id = febsales.orderID
WHERE
    febsales.Quantity > 2;

-- List all the products sold in Los Angeles in February, and include how many of each were sold
SELECT 
    product, SUM(quantity) AS total_sold
FROM
    bit_db.febsales
WHERE
    location LIKE '%Los Angeles%'
GROUP BY product
ORDER BY total_sold;

-- Which locations in New York received at least 3 orders in January, and how many orders did they each receive? 
SELECT 
    location, COUNT(orderdate)
FROM
    jansales
WHERE
    location LIKE '%New York%'
GROUP BY location
HAVING COUNT(orderdate) > 2;

-- How many of each type of headphone were sold in February?
SELECT 
    product, SUM(quantity)
FROM
    febsales
WHERE
    product LIKE '%headphones%'
GROUP BY product;


-- What was the average amount spent per account in February? 
SELECT 
    AVG(quantity * price) AS Average_amount
FROM
    bit_db.febsales feb
        LEFT JOIN
    bit_db.customers cust ON feb.orderid = cust.order_id;

-- what was the avg quantity of products purchased per account in Feb?
SELECT 
    AVG(feb.quantity)
FROM
    bit_db.febsales feb
        JOIN
    bit_db.customers cust ON feb.orderid = cust.order_id;

-- which product brought in the most revenue in January and how much revenue did it bring in total? 
SELECT 
    product,
    SUM(quantity) AS Total_units_Sold,
    ROUND(SUM(price), 2) AS Total_Revenue
FROM
    bit_db.JanSales
GROUP BY product
ORDER BY Total_Revenue DESC; 
